# -*- mode: shell-script -*-

#
# Battery widget to appear in command prompt.
# To use include \{battery\} in your PS1.
#

## require: prompt-functions
## required-by: PROMPT

declare -gr _battery_glyphs=$'\u005f\u2581\u2582\u2583\u2584\u2585\u2586\u2587\u2588\u2588'

declare -g BATTERY_THR_LO=20
declare -g BATTERY_THR_HI=60

function __battery_show()
{
    local batt result
    local support_color=y
    local color color_red color_yel color_grn color_off

    if [[ -n "${support_color}" ]] ; then
	color_red="\001\e[91m\002"
	color_yel="\001\e[93m\002"
	color_grn="\001\e[92m\002"
	color_off="\001\e[0m\002"
    fi

    for batt in /sys/class/power_supply/BAT*/ ; do
	batt=$(<$batt/capacity)
	[[ -z "${batt}" ]] && continue

	# determine color
	if   [[ "${batt}" -ge "${BATTERY_THR_HI}" ]] ; then
	    color="${color_grn}"
	elif [[ "${batt}" -ge "${BATTERY_THR_LO}" ]] ; then
	    color="${color_yel}"
	else
	    color="${color_red}"
	fi

	# the complicated expression is simply a
	# 0-100 range capped and scaled to a size
	# of _battery_glyphs array
	result+="\
${color}\
${_battery_glyphs:$(($batt>=100?${#_battery_glyphs}-1 : $batt / ${#_battery_glyphs})):1}\
${color_off}"
    done

    [[ -n "${result}" ]] && printf "[%b]\n" "${result}"
}

prompt-register-widget battery __battery_show
